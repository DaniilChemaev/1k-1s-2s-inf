"Практика от 24 мая
1) На вход подается имя класса. Нужно дать по этому классу некоторую сводку:
 кол-во public methods, кол-во атрибутов, вывести список перегруженных методов
(при одном названии нескольких реализаций, вывести сигнатуру методов (имя и список типов))
2) ArraySerialize - интерфейс
        method - serralize(int[] array, filename) (это сохранение данных объекта в потоке. Сохраняем данные в файле)
     BinaryArrayFileSerializes (записывает данные в байтах, наследник)
     TextArrayFileSerializes (записывает данные в строке, наследник)
Входные данные: имя сериализатора
Нужно создать массив и сериализовать его. Написать код, который меняет поведение, в зависимости от того, что нам нужно.
Мы не должны вызывать конструктор в явном виде
(то есть по имени класса)
3) Самому реализовать библиотеку тестирования!
Научиться запускать настоящий тестовый класс (не в полном объеме).
 Class Assert {
    void assert(Object 1, Object 2) {
        if (1.equals(2)) {
     // do
        } else {
     throw new exp
        }
           }
  }

3 анотации:
@Test - @MyTest
@Before - @MyBefore
@After - @MyAfter

(for по всем методам и проверяешь, аннотирован ли метод @Test) выполняется то, что снизу

Для любого тестового метода:
 - экземляр тестового класса
 - вызываются все методы, которые помечены @Before
 - запускается текущий тест
 - вызываются все авторы

Вариант 1:
Сделать всё это для junit

Вариант 2:
Свой ассет и свои аннотации"